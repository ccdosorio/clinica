{"version":3,"sources":["app/views/prescription/Prescription.jsx","app/views/prescription/PrescriptionInternal.jsx","app/views/prescription/PrescriptionsCreate.jsx","app/views/prescription/PrescriptionList.jsx","app/views/prescription/PrescriptionInternalList.jsx"],"names":["Prescription","props","useState","flag","setFlag","handleDiagnostic","values","a","formik","diagnostic","value","handleMedicine","medicine","handleFormSubmitPrescription","body","idconsultation","iddiagnostic","idmedicine","quantity","days","description","Https","post","res","code","NotificationManager","success","message","status","setTimeout","getPrescriptions","useFormik","initialValues","validate","errors","onSubmit","className","style","width","height","handleSubmit","htmlFor","classNamePrefix","id","name","options","diagnostics","onChange","defaultValue","medicines","type","placeholder","handleChange","cols","rows","PrescriptionInternalCreate","handleArticle","article","handleFormSubmitPrescriptionInternal","idarticle","info","articles","PrescriptionsCreate","setDiagnostic","setMedicines","setArticles","prescriptions","setPrescriptions","prescriptionsInternals","setPrescriptionsInternals","getDiagnostics","idConsultation","match","params","select","getMedicines","getArticles","getPrescriptionsInternals","useEffect","to","PrescriptionInternal","PrescriptionList","title","PrescriptionInternalList","length","map","item","ind","key","descripcion","cantidad","dias","diagnostico","format","Date","fechaConsulta","getTime","enfermedad","medicamento","articulo"],"mappings":"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","file":"static/js/43.984def62.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Select from \"react-select\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nimport Https from \"../../api/Https\";\r\n\r\nconst Prescription = (props) => {\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  const handleDiagnostic = async (values) => {\r\n    formik.values.diagnostic = values.value;\r\n  };\r\n\r\n  const handleMedicine = async (values) => {\r\n    formik.values.medicine = values.value;\r\n  };\r\n\r\n  const handleFormSubmitPrescription = async (values) => {\r\n    let body = {\r\n      idconsultation: props.idconsultation,\r\n      iddiagnostic: values.diagnostic,\r\n      idmedicine: values.medicine,\r\n      quantity: values.quantity,\r\n      days: values.days,\r\n      description: values.description,\r\n    };\r\n    const res = await Https.post(\"consulta/create/prescription\", body);\r\n    if (res.code === 200) {\r\n      NotificationManager.success(res.message, res.status);\r\n      setFlag(true);\r\n    }\r\n    setTimeout(() => {\r\n      formik.values.quantity = \"\";\r\n      formik.values.days = \"\";\r\n      formik.values.description = \"\";\r\n      setFlag(false);\r\n    }, 2000);\r\n    await props.getPrescriptions();\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.diagnostic) {\r\n      errors.diagnostic = \"Requerido\";\r\n    }\r\n\r\n    if (!values.medicine) {\r\n      errors.medicine = \"Requerido\";\r\n    }\r\n\r\n    if (!values.quantity) {\r\n      errors.quantity = \"Requerido\";\r\n    }\r\n\r\n    if (!values.days) {\r\n      errors.days = \"Requerido\";\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = \"Requerido\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      diagnostic: 0,\r\n      medicine: 0,\r\n      quantity: \"\",\r\n      days: \"\",\r\n      description: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleFormSubmitPrescription(values);\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"col-lg-6 mb-3\">\r\n      <div className=\"card\" style={{ width: \"100%\", height: \"100%\" }}>\r\n        <div className=\"card-header bg-transparent\">\r\n          <h3 className=\"card-title\">Receta</h3>\r\n        </div>\r\n        {flag ? (\r\n          <div className=\"card-body\">\r\n            <span className=\"spinner-glow spinner-glow-primary mr-5\"></span>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"card-body\">\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12\">\r\n                  <label htmlFor=\"diagnostic\" className=\"ul-form__label\">\r\n                    Diagnóstico:\r\n                  </label>\r\n                  <Select\r\n                    className=\"basic-single\"\r\n                    classNamePrefix=\"select\"\r\n                    id=\"diagnostic\"\r\n                    name=\"diagnostic\"\r\n                    options={props.diagnostics}\r\n                    onChange={handleDiagnostic}\r\n                    defaultValue={formik.values.diagnostic}\r\n                  />\r\n                  {formik.errors.diagnostic ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.diagnostic}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-12\">\r\n                  <label htmlFor=\"medicine\" className=\"ul-form__label\">\r\n                    Medicamento:\r\n                  </label>\r\n                  <Select\r\n                    className=\"basic-single\"\r\n                    classNamePrefix=\"select\"\r\n                    id=\"medicine\"\r\n                    name=\"medicine\"\r\n                    options={props.medicines}\r\n                    onChange={handleMedicine}\r\n                    defaultValue={formik.values.medicine}\r\n                  />\r\n                  {formik.errors.medicine ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.medicine}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"inputEmail4\" className=\"ul-form__label\">\r\n                    Cantidad:\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"quantity\"\r\n                    placeholder=\"Cantidad\"\r\n                    name=\"quantity\"\r\n                    value={formik.values.quantity}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.quantity ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.quantity}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"inputEmail4\" className=\"ul-form__label\">\r\n                    Días:\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"days\"\r\n                    placeholder=\"Días\"\r\n                    name=\"days\"\r\n                    value={formik.values.days}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.days ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.days}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-12\">\r\n                  <label htmlFor=\"inputEmail4\" className=\"ul-form__label\">\r\n                    Descripción:\r\n                  </label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    cols=\"10\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Descripción\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.description}\r\n                  ></textarea>\r\n                  {formik.errors.description ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.description}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer bg-transparent\">\r\n              <div className=\"mc-footer\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn  btn-outline-secondary m-1 footer-delete-right\"\r\n                    >\r\n                      Guardar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prescription;\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Select from \"react-select\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nimport Https from \"../../api/Https\";\r\n\r\nconst PrescriptionInternalCreate = (props) => {\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  const handleDiagnostic = async (values) => {\r\n    formik.values.diagnostic = values.value;\r\n  };\r\n\r\n  const handleArticle = async (values) => {\r\n    formik.values.article = values.value;\r\n  };\r\n\r\n  const handleFormSubmitPrescriptionInternal = async (values) => {\r\n    let body = {\r\n      idconsultation: props.idconsultation,\r\n      iddiagnostic: values.diagnostic,\r\n      idarticle: values.article,\r\n      quantity: values.quantity,\r\n      days: values.days,\r\n      description: values.description,\r\n    };\r\n    const res = await Https.post(\"consulta/create/prescription/internal\", body);\r\n    if (res.code === 200) {\r\n      NotificationManager.info(res.message, res.status);\r\n      setFlag(true);\r\n    }\r\n    setTimeout(() => {\r\n      formik.values.quantity = \"\";\r\n      formik.values.days = \"\";\r\n      formik.values.description = \"\";\r\n      setFlag(false);\r\n    }, 2000);\r\n    await props.getPrescriptions();\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.diagnostic) {\r\n      errors.diagnostic = \"Requerido\";\r\n    }\r\n\r\n    if (!values.article) {\r\n      errors.article = \"Requerido\";\r\n    }\r\n\r\n    if (!values.quantity) {\r\n      errors.quantity = \"Requerido\";\r\n    }\r\n\r\n    if (!values.days) {\r\n      errors.days = \"Requerido\";\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = \"Requerido\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      diagnostic: 0,\r\n      article: 0,\r\n      quantity: \"\",\r\n      days: \"\",\r\n      description: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleFormSubmitPrescriptionInternal(values);\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"col-lg-6 mb-3\">\r\n      <div className=\"card\" style={{ width: \"100%\", height: \"100%\" }}>\r\n        <div className=\"card-header bg-transparent\">\r\n          <h3 className=\"card-title\">Receta Interna</h3>\r\n        </div>\r\n        {flag ? (\r\n          <div className=\"card-body\">\r\n            <span className=\"spinner-glow spinner-glow-primary mr-5\"></span>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"card-body\">\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12\">\r\n                  <label htmlFor=\"diagnostic\" className=\"ul-form__label\">\r\n                    Diagnóstico:\r\n                  </label>\r\n                  <Select\r\n                    className=\"basic-single\"\r\n                    classNamePrefix=\"select\"\r\n                    id=\"diagnostic\"\r\n                    name=\"diagnostic\"\r\n                    options={props.diagnostics}\r\n                    onChange={handleDiagnostic}\r\n                    defaultValue={formik.values.diagnostic}\r\n                  />\r\n                  {formik.errors.diagnostic ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.diagnostic}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-12\">\r\n                  <label htmlFor=\"article\" className=\"ul-form__label\">\r\n                    Artículo:\r\n                  </label>\r\n                  <Select\r\n                    className=\"basic-single\"\r\n                    classNamePrefix=\"select\"\r\n                    id=\"article\"\r\n                    name=\"article\"\r\n                    options={props.articles}\r\n                    onChange={handleArticle}\r\n                    defaultValue={formik.values.article}\r\n                  />\r\n                  {formik.errors.article ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.article}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"inputEmail4\" className=\"ul-form__label\">\r\n                    Cantidad:\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"quantity2\"\r\n                    placeholder=\"Cantidad\"\r\n                    name=\"quantity\"\r\n                    value={formik.values.quantity}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.quantity ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.quantity}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"inputEmail4\" className=\"ul-form__label\">\r\n                    Días:\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"days2\"\r\n                    placeholder=\"Días\"\r\n                    name=\"days\"\r\n                    value={formik.values.days}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.days ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.days}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group col-md-12\">\r\n                  <label htmlFor=\"inputEmail4\" className=\"ul-form__label\">\r\n                    Descripción:\r\n                  </label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    id=\"description2\"\r\n                    cols=\"10\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Descripción\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.description}\r\n                  ></textarea>\r\n                  {formik.errors.description ? (\r\n                    <small className=\"ul-form__text form-text text-danger\">\r\n                      {formik.errors.description}\r\n                    </small>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer bg-transparent\">\r\n              <div className=\"mc-footer\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn  btn-outline-secondary m-1 footer-delete-right\"\r\n                    >\r\n                      Guardar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrescriptionInternalCreate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Prescription from \"./Prescription\";\r\nimport PrescriptionInternal from \"./PrescriptionInternal\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\n\r\nimport Https from \"../../api/Https\";\r\nimport PrescriptionList from \"./PrescriptionList\";\r\nimport PrescriptionInternalList from \"./PrescriptionInternalList\";\r\n\r\nconst PrescriptionsCreate = (props) => {\r\n  const [diagnostic, setDiagnostic] = useState([]);\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [prescriptions, setPrescriptions] = useState([]);\r\n  const [prescriptionsInternals, setPrescriptionsInternals] = useState([]);\r\n\r\n  const getDiagnostics = async () => {\r\n    let body = {\r\n      idConsultation: props.match.params.idconsultation,\r\n      select: true,\r\n    };\r\n    const res = await Https.post(\"consulta/get/diagnostics\", body);\r\n    setDiagnostic(res);\r\n  };\r\n\r\n  const getMedicines = async () => {\r\n    let body = { select: true };\r\n    const res = await Https.post(\"consulta/medicines\", body);\r\n    setMedicines(res);\r\n  };\r\n\r\n  const getArticles = async () => {\r\n    let body = { select: true };\r\n    const res = await Https.post(\"consulta/articles\", body);\r\n    setArticles(res);\r\n  };\r\n\r\n  const getPrescriptions = async () => {\r\n    let body = { idconsultation: props.match.params.idconsultation };\r\n    const res = await Https.post(\"consulta/get/prescriptions\", body);\r\n    setPrescriptions(res);\r\n  };\r\n\r\n  const getPrescriptionsInternals = async () => {\r\n    let body = { idconsultation: props.match.params.idconsultation };\r\n    const res = await Https.post(\"consulta/get/prescriptions/internals\", body);\r\n    setPrescriptionsInternals(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDiagnostics();\r\n    getMedicines();\r\n    getArticles();\r\n    getPrescriptions();\r\n    getPrescriptionsInternals();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <Link\r\n            to={`/invoice/prescription/${props.match.params.idconsultation}`}\r\n          >\r\n            <button className=\"btn  btn-info m-1 footer-delete-right\">\r\n              Generar Receta\r\n            </button>\r\n          </Link>\r\n          <Link\r\n            to={`/employee/372/${props.match.params.idconsultation}/consultation#step4`}\r\n          >\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn  btn-outline-secondary m-1 footer-delete-right\"\r\n            >\r\n              Regresar a Consulta\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <section className=\"basic-action-bar\">\r\n        <div className=\"row\">\r\n          <Prescription\r\n            diagnostics={diagnostic}\r\n            medicines={medicines}\r\n            idconsultation={props.match.params.idconsultation}\r\n            getPrescriptions={getPrescriptions}\r\n          />\r\n          <PrescriptionInternal\r\n            diagnostics={diagnostic}\r\n            articles={articles}\r\n            idconsultation={props.match.params.idconsultation}\r\n            getPrescriptions={getPrescriptionsInternals}\r\n          />\r\n        </div>\r\n        <NotificationContainer />\r\n      </section>\r\n      <section className=\"basic-action-bar\">\r\n        <div className=\"row\">\r\n          <PrescriptionList prescriptions={prescriptions} title=\"Recetas\" />\r\n          <PrescriptionInternalList\r\n            prescriptions={prescriptionsInternals}\r\n            title=\"Recetas Creadas\"\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrescriptionsCreate;\r\n","import React from \"react\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst PrescriptionList = ({ prescriptions, title }) => {\r\n  return (\r\n    <div className=\"col-lg-6 mb-3\">\r\n      <SimpleCard title={title} className=\"mb-4\">\r\n        {prescriptions.length === 0 ? (\r\n          <p className=\"text-muted\">No hay recetas creadas</p>\r\n        ) : (\r\n          <>\r\n            {prescriptions.map((item, ind) => (\r\n              <div\r\n                key={ind}\r\n                className=\"d-flex flex-column border-bottom flex-sm-row align-items-sm-center mb-3\"\r\n              >\r\n                <div className=\"flex-grow-1\">\r\n                  <h5>\r\n                    <b>{item.descripcion}</b>\r\n                  </h5>\r\n                  <p className=\"m-0 text-small text-muted\">\r\n                    Cantidad: {item.cantidad}\r\n                  </p>\r\n                  <p className=\"m-0 text-small text-muted\">Días: {item.dias}</p>\r\n                  <p className=\"m-0 text-small text-muted\">\r\n                    Diagnóstico: {item.diagnostico}\r\n                  </p>\r\n                  <p>\r\n                    Fecha Consulta:{\" \"}\r\n                    {format(\r\n                      new Date(\r\n                        item.fechaConsulta ? item.fechaConsulta : new Date()\r\n                      ).getTime(),\r\n                      \"dd MMM, yyyy\"\r\n                    )}\r\n                  </p>\r\n                  <p>Enfermedad: {item.enfermedad}</p>\r\n                  <p>Medicamento: {item.medicamento}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </SimpleCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrescriptionList;\r\n","import React from \"react\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst PrescriptionInternalList = ({ prescriptions, title }) => {\r\n  return (\r\n    <div className=\"col-lg-6 mb-3\">\r\n      <SimpleCard title={title} className=\"mb-4\">\r\n        {prescriptions.length === 0 ? (\r\n          <p className=\"text-muted\">No hay recetas creadas</p>\r\n        ) : (\r\n          <>\r\n            {prescriptions.map((item, ind) => (\r\n              <div\r\n                key={ind}\r\n                className=\"d-flex flex-column border-bottom flex-sm-row align-items-sm-center mb-3\"\r\n              >\r\n                <div className=\"flex-grow-1\">\r\n                  <h5>\r\n                    <b>{item.descripcion}</b>\r\n                  </h5>\r\n                  <p className=\"m-0 text-small text-muted\">\r\n                    Cantidad: {item.cantidad}\r\n                  </p>\r\n                  <p className=\"m-0 text-small text-muted\">Días: {item.dias}</p>\r\n                  <p className=\"m-0 text-small text-muted\">\r\n                    Diagnóstico: {item.diagnostico}\r\n                  </p>\r\n                  <p>\r\n                    Fecha Consulta:{\" \"}\r\n                    {format(\r\n                      new Date(\r\n                        item.fechaConsulta ? item.fechaConsulta : new Date()\r\n                      ).getTime(),\r\n                      \"dd MMM, yyyy\"\r\n                    )}\r\n                  </p>\r\n                  <p>Enfermedad: {item.enfermedad}</p>\r\n                  <p>Artículo: {item.articulo}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </SimpleCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrescriptionInternalList;\r\n"],"sourceRoot":""}