{"version":3,"sources":["app/views/employees/EmployeeList.jsx"],"names":["EmpleadosList","props","useState","employees","setEmployees","page","setPage","numberPages","setNumberPages","numberRecords","setNumberRecords","names","setName","codes","setCode","getEmployees","a","options","select","no_pagina","paginas","Http","post","res","cantidad","handeViewClick","id","history","push","handlePageClick","data","pageSelected","selected","handleShowEmployees","event","pag","parseInt","target","value","handleDelete","values","empleado","idempleado","swal","fire","title","text","message","icon","timer","getFilterEmployee","get","filterName","filterCode","map","nombres","codigo","label","useEffect","routeSegments","name","path","length","className","htmlFor","classNamePrefix","onChange","elevation","style","minWidth","key","align","empresa","apellidos","classList","estado","size","onClick","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName"],"mappings":"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","file":"static/js/67.50f7c8e8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb, Loading } from \"@gull\";\r\nimport { Table, Card } from \"react-bootstrap\";\r\nimport { classList } from \"@utils\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport swal from \"sweetalert2\";\r\nimport Select from \"react-select\";\r\n\r\nimport Http from \"../../api/Https\";\r\n\r\nconst EmpleadosList = (props) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [numberPages, setNumberPages] = useState(10);\r\n  const [numberRecords, setNumberRecords] = useState(0);\r\n  const [names, setName] = useState([]);\r\n  const [codes, setCode] = useState([]);\r\n\r\n  const getEmployees = async () => {\r\n    let options = { select: false, no_pagina: page, paginas: numberPages };\r\n    const res = await Http.post(\"empleado/all\", options);\r\n    setNumberRecords(res[0].cantidad);\r\n    setEmployees(res);\r\n  };\r\n\r\n  const handeViewClick = async (id) => {\r\n    props.history.push(`/employee/${id}/edit`);\r\n  };\r\n\r\n  const handleName = (value) => {\r\n    props.history.push(`/employee/${value.value}/edit`);\r\n  };\r\n\r\n  const handleCode = (value) => {\r\n    props.history.push(`/employee/${value.value}/edit`);\r\n  };\r\n\r\n  const handlePageClick = async (data) => {\r\n    let pageSelected = data.selected * numberPages;\r\n    let options = {\r\n      select: false,\r\n      no_pagina: pageSelected,\r\n      paginas: numberPages,\r\n    };\r\n    const res = await Http.post(\"empleado/all\", options);\r\n    setEmployees(res);\r\n    setPage(pageSelected);\r\n  };\r\n\r\n  const handleShowEmployees = async (event) => {\r\n    let pag = parseInt(event.target.value);\r\n    setNumberPages(pag);\r\n    let options = { select: false, no_pagina: page, paginas: pag };\r\n    const res = await Http.post(\"empleado/all\", options);\r\n    setEmployees(res);\r\n    setPage(page);\r\n  };\r\n\r\n  const handleDelete = async (values) => {\r\n    let empleado = {\r\n      idempleado: values,\r\n    };\r\n    const res = await Http.post(\"baja-empleado\", empleado);\r\n    if (res) {\r\n      await swal.fire({\r\n        title: \"¡Eliminado!\",\r\n        text: res.message,\r\n        icon: \"success\",\r\n        timer: 2000,\r\n      });\r\n    }\r\n    await getEmployees();\r\n  };\r\n\r\n  const getFilterEmployee = async () => {\r\n    const res = await Http.get(\"empleado/all\");\r\n    let filterName = [];\r\n    let filterCode = [];\r\n    res.map(({ nombres, codigo, idempleado }) => {\r\n      if (nombres !== null && nombres !== \"\") {\r\n        filterName.push({\r\n          value: idempleado,\r\n          label: nombres,\r\n        });\r\n      }\r\n      filterCode.push({\r\n        value: idempleado,\r\n        label: codigo,\r\n      });\r\n    });\r\n    setName(filterName);\r\n    setCode(filterCode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n    getFilterEmployee();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Inicio\", path: \"/home\" },\r\n          { name: \"Lista de Empleados\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n      {employees.length < 1 ? (\r\n        <Loading></Loading>\r\n      ) : (\r\n        <>\r\n          <div className=\"mb-12\">\r\n            <div className=\"form-row\">\r\n              <div className=\"col-md-4 form-group mb-4\">\r\n                <label htmlFor=\"\">Nombre Empleado: </label>\r\n                <Select\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  name=\"color\"\r\n                  options={names}\r\n                  onChange={handleName}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 form-group mb-4\">\r\n                <label htmlFor=\"\">Código Empleado:</label>\r\n                <Select\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  name=\"color\"\r\n                  options={codes}\r\n                  onChange={handleCode}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Card elevation={6} className=\"w-100\">\r\n            <div className=\"row px-4 mt-3\">\r\n              <div className=\"col-sm-12 col-md-6 mb-2\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"mr-1\">Mostrar</span>\r\n                  <div className=\"mr-1\">\r\n                    <select\r\n                      className=\"form-control\"\r\n                      onChange={handleShowEmployees}\r\n                      value={numberPages}\r\n                    >\r\n                      <option value={10}>10</option>\r\n                      <option value={25}>25</option>\r\n                      <option value={50}>50</option>\r\n                      <option value={100}>100</option>\r\n                    </select>\r\n                  </div>\r\n                  <span>registros</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Table style={{ minWidth: 750 }}>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"pl-sm-24\">Id</th>\r\n                  <th className=\"px-0\">Empresa</th>\r\n                  <th className=\"px-0\">Nombre</th>\r\n                  <th className=\"px-0\">Apellido</th>\r\n                  <th className=\"px-0\">Codigo</th>\r\n                  <th className=\"px-0\">Estado</th>\r\n                  <th className=\"px-0\">Dar de baja</th>\r\n                  <th className=\"px-0\">Administrar</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {employees.map((value) => (\r\n                  <tr key={value.idempleado}>\r\n                    <td className=\"pl-sm-24 capitalize\" align=\"left\">\r\n                      {value.idempleado}\r\n                    </td>\r\n                    <td className=\"pl-0 capitalize\" align=\"left\">\r\n                      {value.empresa || (\r\n                        <p className=\"text-muted\">Sin empresa</p>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"pl-0 capitalize\" align=\"left\">\r\n                      {value.nombres || (\r\n                        <p className=\"text-muted\">Sin nombre</p>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"pl-0 capitalize\" align=\"left\">\r\n                      {value.apellidos || (\r\n                        <p className=\"text-muted\">Sin apellidos</p>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"pl-0 capitalize\" align=\"left\">\r\n                      {value.codigo || <p className=\"text-muted\">Sin código</p>}\r\n                    </td>\r\n                    <td className=\"pl-0 capitalize\">\r\n                      <small\r\n                        className={classList({\r\n                          \"badge rounded-pill text-white px-8 py-2\": true,\r\n                          \"bg-success\": value.estado === \"A\",\r\n                          \"bg-danger\": value.estado === \"I\",\r\n                        })}\r\n                      >\r\n                        {value.estado}\r\n                      </small>\r\n                    </td>\r\n                    <td className=\"pl-0\">\r\n                      <div className=\"d-flex\">\r\n                        <div className=\"cursor-pointer mr-3\">\r\n                          <MdDelete\r\n                            className=\"text-danger\"\r\n                            size={18}\r\n                            onClick={() => {\r\n                              swal\r\n                                .fire({\r\n                                  title: \"¿Estas seguro?\",\r\n                                  text: \"¡No podrás revertir este cambio!\",\r\n                                  icon: \"warning\",\r\n                                  showCancelButton: true,\r\n                                  confirmButtonColor: \"#3085d6\",\r\n                                  cancelButtonColor: \"#d33\",\r\n                                  confirmButtonText: \"Si, eliminar\",\r\n                                  cancelButtonText: \"No\",\r\n                                })\r\n                                .then((result) => {\r\n                                  if (result.value) {\r\n                                    handleDelete(value.idempleado);\r\n                                  } else {\r\n                                    swal.fire({\r\n                                      title: \"Cencelado!\",\r\n                                      text: \"Permiso denegado\",\r\n                                      icon: \"error\",\r\n                                      timer: 1500,\r\n                                    });\r\n                                  }\r\n                                });\r\n                            }}\r\n                          ></MdDelete>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"pl-0\">\r\n                      <div className=\"d-flex\">\r\n                        <i\r\n                          className=\"i-Arrow-Right mr-4 font-weight-900 text-primary cursor-pointer\"\r\n                          onClick={() => handeViewClick(value.idempleado)}\r\n                        ></i>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n            <div className=\"px-3 pb-3 mt-3 d-flex flex-row justify-content-end\">\r\n              <ReactPaginate\r\n                previousLabel={\"Anterior\"}\r\n                nextLabel={\"Siguiente\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={Math.ceil(numberRecords / numberPages)}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </div>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpleadosList;\r\n"],"sourceRoot":""}