{"version":3,"sources":["app/views/dashboard/dashboard1/Dashboard1.jsx"],"names":["Dashboard1","state","ingresoDiarios","ingresoSemanales","ingresoMensualesuno","ingresoMensualesdos","ingresoMensualestres","ingresoMensualescuatro","ingresoMensualescinco","ingresoMensualesseis","ingresoMensualessiente","ingresoMensualesocho","ingresoMensualesnueve","ingresoMensualesdiez","ingresoMensualesonce","ingresoMensualesdoce","temperatura","sintomas","valueMoto","valueVehiculo","valuePie","valueVisita","listTipoIngreso","TipoIngreso","then","res","cantidadMoto","cantidadVehiculo","cantidadPie","cantidadVisita","forEach","element","tipoIngreso","cantidad","setState","listIngresosDiarios","IngresosDiarios","cantidadEmpleado","total","listIngresosSemanales","IngresosSemanales","listIngresosMensuales","IngresosMensuales","array","mesIngreso","uno","dos","tres","cuatro","cinco","seis","siete","ocho","nueve","diez","once","doce","ingresoMensualessiete","listTemperatura","listSintomas","a","Http","get","this","options1","chart","height","type","zoom","enabled","toolbar","show","tooltip","shared","followCursor","intersect","inverseOrder","custom","undefined","fillSeriesColor","theme","dataLabels","stroke","curve","series","name","data","grid","row","colors","opacity","xaxis","categories","echartBasicDoughnutOption","left","right","bottom","containLabel","color","trigger","formatter","xAxis","axisLine","splitLine","yAxis","radius","center","avoidLabelOverlap","hoverOffset","label","normal","position","textStyle","fontSize","fontWeight","emphasis","labelLine","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","routeSegments","className","lg","md","sm","xs","title","options","style","option","Component"],"mappings":"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","file":"static/js/65.fd52ccac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Http from \"../../../api/Https\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nclass Dashboard1 extends Component {\r\n  state = {\r\n    ingresoDiarios: \"\",\r\n    ingresoSemanales: \"\",\r\n    ingresoMensualesuno: \"\",\r\n    ingresoMensualesdos: \"\",\r\n    ingresoMensualestres: \"\",\r\n    ingresoMensualescuatro: \"\",\r\n    ingresoMensualescinco: \"\",\r\n    ingresoMensualesseis: \"\",\r\n    ingresoMensualessiente: \"\",\r\n    ingresoMensualesocho: \"\",\r\n    ingresoMensualesnueve: \"\",\r\n    ingresoMensualesdiez: \"\",\r\n    ingresoMensualesonce: \"\",\r\n    ingresoMensualesdoce: \"\",\r\n    temperatura: \"\",\r\n    sintomas: \"\",\r\n    valueMoto: \"\",\r\n    valueVehiculo: \"\",\r\n    valuePie: \"\",\r\n    valueVisita: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listIngresosDiarios();\r\n    this.listIngresosSemanales();\r\n    this.listIngresosMensuales();\r\n    this.listTemperatura();\r\n    this.listSintomas();\r\n    this.listTipoIngreso();\r\n  }\r\n\r\n  listTipoIngreso = () => {\r\n    this.TipoIngreso().then((res) => {\r\n      let cantidadMoto;\r\n      let cantidadVehiculo;\r\n      let cantidadPie;\r\n      let cantidadVisita;\r\n      res.forEach((element) => {\r\n        if (element.tipoIngreso === \"Moto\") {\r\n          cantidadMoto = element.cantidad;\r\n        }\r\n\r\n        if (element.tipoIngreso === \"Carro\") {\r\n          cantidadVehiculo = element.cantidad;\r\n        }\r\n\r\n        if (element.tipoIngreso === \"Pie\") {\r\n          cantidadPie = element.cantidad;\r\n        }\r\n\r\n        if (element.tipoIngreso === \"Visita\") {\r\n          cantidadVisita = element.cantidad;\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        valueMoto: cantidadMoto,\r\n        valueVehiculo: cantidadVehiculo,\r\n        valuePie: cantidadPie,\r\n        valueVisita: cantidadVisita,\r\n      });\r\n    });\r\n  };\r\n\r\n  listIngresosDiarios = () => {\r\n    this.IngresosDiarios().then((res) => {\r\n      let cantidadEmpleado;\r\n      let cantidadVisita;\r\n      let total;\r\n\r\n      res.forEach((element) => {\r\n        if (element.tipoIngreso === \"Empleado\") {\r\n          cantidadEmpleado = element.cantidad;\r\n        }\r\n\r\n        if (element.tipoIngreso === \"Visita\") {\r\n          cantidadVisita = element.cantidad;\r\n        }\r\n      });\r\n      total = cantidadEmpleado + cantidadVisita;\r\n      this.setState({\r\n        ingresoDiarios: total,\r\n      });\r\n    });\r\n  };\r\n\r\n  listIngresosSemanales = () => {\r\n    this.IngresosSemanales().then((res) => {\r\n      let cantidadEmpleado;\r\n      let cantidadVisita;\r\n      let total;\r\n\r\n      res.forEach((element) => {\r\n        if (element.tipoIngreso === \"Empleado\") {\r\n          cantidadEmpleado = element.cantidad;\r\n        }\r\n\r\n        if (element.tipoIngreso === \"Visita\") {\r\n          cantidadVisita = element.cantidad;\r\n        }\r\n      });\r\n\r\n      total = cantidadEmpleado + cantidadVisita;\r\n      this.setState({\r\n        ingresoSemanales: total,\r\n      });\r\n    });\r\n  };\r\n\r\n  listIngresosMensuales = () => {\r\n    this.IngresosMensuales().then((res) => {\r\n      let array = [];\r\n      array[0] =\r\n        array[1] =\r\n        array[2] =\r\n        array[3] =\r\n        array[4] =\r\n        array[5] =\r\n        array[6] =\r\n        array[7] =\r\n        array[8] =\r\n        array[9] =\r\n        array[10] =\r\n        array[11] =\r\n        array[12] =\r\n          0;\r\n      res.forEach((element) => {\r\n        array[element.mesIngreso] = element.cantidad;\r\n      });\r\n      let uno = array[1];\r\n      let dos = array[2];\r\n      let tres = array[3];\r\n      let cuatro = array[4];\r\n      let cinco = array[5];\r\n      let seis = array[6];\r\n      let siete = array[7];\r\n      let ocho = array[8];\r\n      let nueve = array[9];\r\n      let diez = array[10];\r\n      let once = array[11];\r\n      let doce = array[12];\r\n      this.setState({\r\n        ingresoMensualesuno: uno,\r\n        ingresoMensualesdos: dos,\r\n        ingresoMensualestres: tres,\r\n        ingresoMensualescuatro: cuatro,\r\n        ingresoMensualescinco: cinco,\r\n        ingresoMensualesseis: seis,\r\n        ingresoMensualessiete: siete,\r\n        ingresoMensualesocho: ocho,\r\n        ingresoMensualesnueve: nueve,\r\n        ingresoMensualesdiez: diez,\r\n        ingresoMensualesonce: once,\r\n        ingresoMensualesdoce: doce,\r\n      });\r\n    });\r\n  };\r\n\r\n  listTemperatura = () => {\r\n    this.temperatura().then((res) => {\r\n      let cantidadEmpleado;\r\n      let cantidadVisita;\r\n      let total;\r\n\r\n      res.forEach((element) => {\r\n        if (element.tipoIngreso === \"Empleado\") {\r\n          cantidadEmpleado = element.cantidad;\r\n        }\r\n\r\n        if (element.tipoIngreso === \"Visita\") {\r\n          cantidadVisita = element.cantidad;\r\n        }\r\n      });\r\n\r\n      total = cantidadEmpleado + cantidadVisita;\r\n\r\n      this.setState({\r\n        temperatura: total,\r\n      });\r\n    });\r\n  };\r\n\r\n  listSintomas = () => {\r\n    this.sintomas().then((res) => {\r\n      this.setState({\r\n        sintomas: res,\r\n      });\r\n    });\r\n  };\r\n\r\n  TipoIngreso = async () => {\r\n    const res = await Http.get(`ingreso/tipo`);\r\n\r\n    return res;\r\n  };\r\n\r\n  IngresosDiarios = async () => {\r\n    const res = await Http.get(`ingreso/diarios`);\r\n\r\n    return res;\r\n  };\r\n\r\n  IngresosSemanales = async () => {\r\n    const res = await Http.get(`ingreso/semanales`);\r\n\r\n    return res;\r\n  };\r\n\r\n  IngresosMensuales = async () => {\r\n    const res = await Http.get(`ingreso/mensuales`);\r\n\r\n    return res;\r\n  };\r\n\r\n  temperatura = async () => {\r\n    const res = await Http.get(`ingreso/temperatura`);\r\n\r\n    return res;\r\n  };\r\n\r\n  sintomas = async () => {\r\n    const res = await Http.get(`ingreso/sintoma`);\r\n\r\n    return res[0].cantidad;\r\n  };\r\n\r\n  render() {\r\n    let options1 = {\r\n      chart: {\r\n        height: 350,\r\n        type: \"line\",\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n        toolbar: {\r\n          show: true,\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        shared: true,\r\n        followCursor: false,\r\n        intersect: false,\r\n        inverseOrder: false,\r\n        custom: undefined,\r\n        fillSeriesColor: false,\r\n        theme: false,\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: \"smooth\",\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Ingresos\",\r\n          data: [\r\n            this.state.ingresoMensualesuno,\r\n            this.state.ingresoMensualesdos,\r\n            this.state.ingresoMensualestres,\r\n            this.state.ingresoMensualescuatro,\r\n            this.state.ingresoMensualescinco,\r\n            this.state.ingresoMensualesseis,\r\n            this.state.ingresoMensualessiete,\r\n            this.state.ingresoMensualesocho,\r\n            this.state.ingresoMensualesnueve,\r\n            this.state.ingresoMensualesdiez,\r\n            this.state.ingresoMensualesonce,\r\n            this.state.ingresoMensualesdoce,\r\n          ],\r\n        },\r\n      ],\r\n\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Ene\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Abr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Ago\",\r\n          \"Sep\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dic\",\r\n        ],\r\n      },\r\n    };\r\n\r\n    let echartBasicDoughnutOption = {\r\n      grid: {\r\n        left: \"3%\",\r\n        right: \"4%\",\r\n        bottom: \"3%\",\r\n        containLabel: true,\r\n      },\r\n      color: [\"#db0d0d\", \"#38b811\", \"#0818c9\", \"#08c9b9\"],\r\n      tooltip: {\r\n        show: false,\r\n        trigger: \"item\",\r\n        formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n      },\r\n      xAxis: [\r\n        {\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n        },\r\n      ],\r\n\r\n      series: [\r\n        {\r\n          name: \"Sessions\",\r\n          type: \"pie\",\r\n          radius: [\"50%\", \"85%\"],\r\n          center: [\"50%\", \"50%\"],\r\n          avoidLabelOverlap: false,\r\n          hoverOffset: 5,\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n              position: \"center\",\r\n              textStyle: {\r\n                fontSize: \"13\",\r\n                fontWeight: \"normal\",\r\n              },\r\n              formatter: \"{a}\",\r\n            },\r\n            emphasis: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: \"15\",\r\n                fontWeight: \"bold\",\r\n              },\r\n              formatter: \"{b} \\n{c} ({d}%)\",\r\n            },\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              show: false,\r\n            },\r\n          },\r\n          data: [\r\n            { value: this.state.valueVehiculo, name: \"En Vehículo\" },\r\n            { value: this.state.valueMoto, name: \"En Moto\" },\r\n            { value: this.state.valuePie, name: \"A Pie\" },\r\n            { value: this.state.valueVisita, name: \"Visitas\" },\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb routeSegments={[{ name: \"Inicio\" }]}></Breadcrumb>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"i-Business-Man\"></i>\r\n                <div className=\"content\">\r\n                  <p>ingresos (diarios)</p>\r\n                  <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                    {this.state.ingresoDiarios}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"i-Business-Mens\"></i>\r\n                <div className=\"content\">\r\n                  <p>ingresos (semanales)</p>\r\n                  <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                    {this.state.ingresoSemanales}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"i-Temperature1\"></i>\r\n                <div className=\"content\">\r\n                  <p>mayores a 37 grados</p>\r\n                  <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                    {this.state.temperatura}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"i-Stethoscope\"></i>\r\n                <div className=\"content\">\r\n                  <p>sintomas covid</p>\r\n                  <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                    {this.state.sintomas}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n            <SimpleCard className=\"h-100\" title=\"Ingresos Mensuales\">\r\n              <Chart\r\n                options={options1}\r\n                series={options1.series}\r\n                type={options1.chart.type}\r\n              />\r\n            </SimpleCard>\r\n          </Col>\r\n\r\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n            <SimpleCard title=\"Tipos de Ingresos\">\r\n              <ReactEcharts\r\n                style={{ height: \"280px\" }}\r\n                option={echartBasicDoughnutOption}\r\n              />\r\n            </SimpleCard>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard1;\r\n"],"sourceRoot":""}